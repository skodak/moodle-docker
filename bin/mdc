#!/usr/bin/env bash
set -e

# Check that the configuration file is present,
# stop if not to prevent accidental creation of unwanted containers.
filename="moodle-docker.env"
if [ ! -f $filename ];
then
    echo "Missing moodle-docker.env file in current directory!"
    exit 1
fi

# First find out if this was called from symlink,
# then find the real path of parent directory.
# This is needed because macOS does not have GNU realpath.
thisfile=$( readlink "${BASH_SOURCE[0]}" ) || thisfile="${BASH_SOURCE[0]}"
basedir="$( cd "$( dirname "$thisfile" )/../" && pwd -P )"

# Use moodle-docker-compose.yml as much as possible,
# but allow devs to make tweaks in it,
# it is deleted only from bin/docker_up and bin/docker_rebuild.
finalconfigfilename="moodle-docker-compose.yml"
if [ -f $finalconfigfilename ];
then
    docker compose -f $finalconfigfilename "$@"
    exit 0
fi

# Load all environment settings.
source "${basedir}/bin/include/env.sh"

export BASEDIR="${basedir}"
export ASSETDIR="${basedir}/assets"

dockercompose="-f ${basedir}/base.yml"
dockercompose="${dockercompose} -f ${basedir}/mailpit.yml"

# PHP Version.
export MOODLE_DOCKER_PHP_VERSION=${MOODLE_DOCKER_PHP_VERSION:-8.1}

# Database flavour.
dockercompose="${dockercompose} -f ${basedir}/db.${MOODLE_DOCKER_DB}.yml"

# Add support for version specific database settings.
if [ ! -z "$MOODLE_DOCKER_DB_VERSION" ];
then
    filename="${basedir}/db.${MOODLE_DOCKER_DB}.${MOODLE_DOCKER_DB_VERSION}.yml"
    if [ -f $filename ]; then
        dockercompose="${dockercompose} -f ${filename}"
    fi
fi

# Selenium browser
browserparts=(${MOODLE_DOCKER_BROWSER//:/ })
export MOODLE_DOCKER_BROWSER_NAME=${browserparts[0]}
export MOODLE_DOCKER_BROWSER_TAG=${browserparts[1]}

if [[ -z "$MOODLE_DOCKER_BROWSER_NAME" ]];
then
    MOODLE_DOCKER_BROWSER_NAME=chromium
fi

if [[ -z "$MOODLE_DOCKER_BROWSER_TAG" ]];
then
    MOODLE_DOCKER_BROWSER_TAG=4
fi

dockercompose="${dockercompose} -f ${basedir}/selenium.yml"

# Browser debug port.
if [[ $MOODLE_DOCKER_BROWSER_DEBUG_PORT == *":"* ]] || [[ $MOODLE_DOCKER_BROWSER_DEBUG_PORT -gt 0 ]]
then
    dockercompose="${dockercompose} -f ${basedir}/selenium.debug.port.yml"
fi

# External services
if [[ ! -z "$MOODLE_DOCKER_PHPUNIT_EXTERNAL_SERVICES" ]];
then
    dockercompose="${dockercompose} -f ${basedir}/phpunit-external-services.yml"
fi

# BBB Mock
if [[ ! -z "$MOODLE_DOCKER_BBB_MOCK" ]];
then
    dockercompose="${dockercompose} -f ${basedir}/bbb-mock.yml"
fi

#  Faildump directory
if [[ ! -z "$MOODLE_DOCKER_BEHAT_FAILDUMP" ]];
then
    if [ ! -d "$MOODLE_DOCKER_BEHAT_FAILDUMP" ];
    then
        echo 'Error: MOODLE_DOCKER_BEHAT_FAILDUMP is not an existing directory'
        exit 1
    fi
    dockercompose="${dockercompose} -f ${basedir}/behat-faildump.yml"
fi

#  Backups directory
if [[ ! -z "$MOODLE_DOCKER_BACKUPS" ]];
then
    if [ ! -d "$MOODLE_DOCKER_BACKUPS" ];
    then
        echo 'Error: MOODLE_DOCKER_BACKUPS is not an existing directory'
        exit 1
    fi
    dockercompose="${dockercompose} -f ${basedir}/webserver.backups.yml"
    dockercompose="${dockercompose} -f ${basedir}/db.backups.yml"
fi

#  Backups directory
if [[ ! -z "$MOODLE_DOCKER_PHP_ERROR_LOG" ]];
then
    if [ ! -f "$MOODLE_DOCKER_PHP_ERROR_LOG" ];
    then
        touch $MOODLE_DOCKER_PHP_ERROR_LOG
    fi
    if [ ! -f "$MOODLE_DOCKER_PHP_ERROR_LOG" ];
    then
        echo 'Error: MOODLE_DOCKER_PHP_ERROR_LOG file cannot be created'
        exit 1
    fi
    dockercompose="${dockercompose} -f ${basedir}/webserver.phperrorlog.yml"
fi

# Apply local customisations if a local.yml is found.
# Note: This must be the final modification before the docker-compose command is called.
localfile="${basedir}/local.yml"
if [ -f "${localfile}" ]
then
  echo "Including local options from ${localfile}"
  dockercompose="${dockercompose} -f ${localfile}"
fi

# Finally any other custom overrides
filename="moodle-docker.yml"
if [ -f $filename ];
then
    dockercompose="${dockercompose} -f ${filename}"
fi


# Create the final config file and use it.
docker compose $dockercompose config > ${finalconfigfilename} || rm ${finalconfigfilename} || false
docker compose -f $finalconfigfilename "$@"
